[{"/home/abc/Documents/ideal/Ecom-Complet-Mearn-Project/Client/src/index.tsx":"1","/home/abc/Documents/ideal/Ecom-Complet-Mearn-Project/Client/src/App.tsx":"2","/home/abc/Documents/ideal/Ecom-Complet-Mearn-Project/Client/src/Pages/Login.tsx":"3","/home/abc/Documents/ideal/Ecom-Complet-Mearn-Project/Client/src/Router/Router.jsx":"4","/home/abc/Documents/ideal/Ecom-Complet-Mearn-Project/Client/src/Router/Auth.tsx":"5","/home/abc/Documents/ideal/Ecom-Complet-Mearn-Project/Client/src/Router/ProtectRoutes.jsx":"6","/home/abc/Documents/ideal/Ecom-Complet-Mearn-Project/Client/src/Config/Service/Service.tsx":"7","/home/abc/Documents/ideal/Ecom-Complet-Mearn-Project/Client/src/Config/apiConfig/apiConfig.ts":"8","/home/abc/Documents/ideal/Ecom-Complet-Mearn-Project/Client/src/Config/apiConfig/apiEndPoints.ts":"9","/home/abc/Documents/ideal/Ecom-Complet-Mearn-Project/Client/src/Component/common/layout/Laout.tsx":"10","/home/abc/Documents/ideal/Ecom-Complet-Mearn-Project/Client/src/Pages/Register.tsx":"11"},{"size":453,"mtime":1682329396513,"results":"12","hashOfConfig":"13"},{"size":225,"mtime":1682337252150,"results":"14","hashOfConfig":"13"},{"size":3556,"mtime":1682597754922,"results":"15","hashOfConfig":"13"},{"size":722,"mtime":1682593549271,"results":"16","hashOfConfig":"13"},{"size":445,"mtime":1682337359049,"results":"17","hashOfConfig":"13"},{"size":445,"mtime":1682517005580,"results":"18","hashOfConfig":"13"},{"size":1523,"mtime":1682593474573,"results":"19","hashOfConfig":"13"},{"size":1389,"mtime":1682592151075,"results":"20","hashOfConfig":"13"},{"size":244,"mtime":1682592132753,"results":"21","hashOfConfig":"13"},{"size":6732,"mtime":1682576226578,"results":"22","hashOfConfig":"13"},{"size":5896,"mtime":1682594021594,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"blt4ek",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"27"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"/home/abc/Documents/ideal/Ecom-Complet-Mearn-Project/Client/src/index.tsx",[],[],[],"/home/abc/Documents/ideal/Ecom-Complet-Mearn-Project/Client/src/App.tsx",["65"],[],"import React from 'react';\nimport logo from './logo.svg';import './App.css';\nimport Router from './Router/Router';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Router />\n    </div>\n  );\n}\n\nexport default App;\n","/home/abc/Documents/ideal/Ecom-Complet-Mearn-Project/Client/src/Pages/Login.tsx",[],[],"/home/abc/Documents/ideal/Ecom-Complet-Mearn-Project/Client/src/Router/Router.jsx",["66"],[],"import { Routes, Route, Navigate } from \"react-router-dom\";\nimport ProtectRoutes from './ProtectRoutes'\nimport AuthPoint from \"./Auth\";\nimport Layout from \"../Component/common/layout/Laout\";\nimport SignIn from \"../Pages/Login\";\nimport SignUp from \"../Pages/Register\";\n\nfunction Router() {\n  return (\n    <div className=\"anvContainer\">\n      <Routes>\n        <Route path='/'>\n          <Route index element={<AuthPoint Component={SignIn} />} />\n          <Route path='/register' element={<AuthPoint Component={SignUp} />} />\n        </Route>\n        <Route path='/*'>\n          <Route index path='*' element={<ProtectRoutes Component={Layout} />} />\n        </Route>\n      </Routes>\n\n    </div>\n  );\n}\nexport default Router",[],"/home/abc/Documents/ideal/Ecom-Complet-Mearn-Project/Client/src/Router/Auth.tsx",["67"],[],"import React, {useEffect} from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { getToken } from '../Config/Service/Service';\n\nconst AuthPoint = ({Component}:any) => {\n    const navigate = useNavigate()\n    useEffect(()=>{\n        const isAuthenticated = getToken();\n        if (isAuthenticated){\n            navigate('/dashboard')\n        }\n      }, [])\n\n  return (\n    <>\n    <Component/>\n    </>\n  )\n}\n\nexport default AuthPoint","/home/abc/Documents/ideal/Ecom-Complet-Mearn-Project/Client/src/Router/ProtectRoutes.jsx",["68"],[],"\nimport React, { useEffect } from 'react'\nimport { useNavigate } from \"react-router-dom\";\nimport { getToken } from '../Config/Service/Service';\nconst PrivateRoute = ({ Component }) => {\n  const navigate = useNavigate()\n  const isAuthenticated = getToken()\n  useEffect(() => {\n    if (!isAuthenticated) {\n      navigate('/')\n    }\n  }, [])\n\n  return (\n    <>\n      {isAuthenticated && <Component />}\n    </>\n  )\n}\n\nexport default PrivateRoute\n\n\n\n","/home/abc/Documents/ideal/Ecom-Complet-Mearn-Project/Client/src/Config/Service/Service.tsx",["69"],[],"import { AppConfig } from \"../apiConfig/apiConfig\";\nimport apiEndPoints from \"../apiConfig/apiEndPoints\";\n\nconst AUTH_KEY = \"jwtToken\";\nexport const setToken = (Name: any) => {\n    localStorage.setItem(AUTH_KEY, Name);\n  };\n  export const getToken  = () => localStorage.getItem(AUTH_KEY);\n  \n  export const clearStorage = (key = \"\") => {\n    if (key == \"\") {\n      localStorage.clear();\n    }\n  };\n\n  /// Login API ////\n  export const loginUser = async ({ email,firstName,lastName,password,isAdmin }:any) => {\n    try {\n     const response = await fetch(AppConfig?.baseURL + apiEndPoints?.Login, {\n       method: apiEndPoints?.methodType?.POST,\n       headers: {\n         'Content-Type': 'application/json'\n       },\n       body: JSON.stringify({ email, firstName, lastName,password,isAdmin})\n     });\n     if (response) {\n      return response.json();\n     } else {\n      throw new Error('Login failed');\n     }\n   } catch (error) {\n     return   console.error(error);\n   }\n }\n\n //register\n export const RegisterUser = async ({ email,firstName,lastName,password,isAdmin }:any) => {\n  try {\n   const response = await fetch(AppConfig?.baseURL + apiEndPoints?.Register, {\n     method: apiEndPoints?.methodType?.POST,\n     headers: {\n       'Content-Type': 'application/json'\n     },\n     body: JSON.stringify({ email, firstName, lastName,password,isAdmin})\n   });\n   if (response) {\n    return response.json();\n   } else {\n    throw new Error('Login failed');\n   }\n } catch (error) {\n   return   console.error(error);\n }\n}\n\n\n","/home/abc/Documents/ideal/Ecom-Complet-Mearn-Project/Client/src/Config/apiConfig/apiConfig.ts",["70"],[],"import { getToken } from \"../Service/Service\";\nimport apiEndPoints from \"./apiEndPoints\";\n\n\nexport const AppConfig = {\n  baseURL: \"http://localhost:5000/api/\",\n  headers: {\n    \"Content-Type\": \"application/json; charset=utf-8\",\n    Accept: \"application/json\",\n    \"Accept-Language\": \"en\",\n  },\n};\nexport const restAuthPost = async (url: string, data: any) => {\n  const token: any = getToken();\n  try {\n    const response = await fetch(AppConfig.baseURL + url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8',\n        'Accept': 'application/json',\n        'Accept-Language': 'en',\n        'Token': token,\n      },\n      body: JSON.stringify(data),\n    });\n    const jsonData = await response.json();\n    return jsonData;\n  } catch (error) {\n    return error;\n  }\n};\n\n\nexport const restGetApi = async (url: string) => {\n  const token: any = getToken();\n  const headers = {\n    \"Content-Type\": \"application/json; charset=utf-8\",\n    Accept: \"application/json\",\n    \"Accept-Language\": \"en\",\n    Token: token,\n  };\n  try {\n    const response = await fetch(AppConfig.baseURL + url, {\n      headers,\n    });\n    if (!response.ok) {\n      throw new Error(\"Network response was not ok\");\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n    throw error;\n  }\n};\n\n\n","/home/abc/Documents/ideal/Ecom-Complet-Mearn-Project/Client/src/Config/apiConfig/apiEndPoints.ts",[],[],"/home/abc/Documents/ideal/Ecom-Complet-Mearn-Project/Client/src/Component/common/layout/Laout.tsx",[],[],"/home/abc/Documents/ideal/Ecom-Complet-Mearn-Project/Client/src/Pages/Register.tsx",[],[],{"ruleId":"71","severity":1,"message":"72","line":2,"column":8,"nodeType":"73","messageId":"74","endLine":2,"endColumn":12},{"ruleId":"75","severity":1,"message":"76","line":1,"column":25,"nodeType":"73","messageId":"74","endLine":1,"endColumn":33},{"ruleId":"77","severity":1,"message":"78","line":12,"column":10,"nodeType":"79","endLine":12,"endColumn":12,"suggestions":"80"},{"ruleId":"77","severity":1,"message":"81","line":12,"column":6,"nodeType":"79","endLine":12,"endColumn":8,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":11,"column":13,"nodeType":"85","messageId":"86","endLine":11,"endColumn":15},{"ruleId":"71","severity":1,"message":"87","line":2,"column":8,"nodeType":"73","messageId":"74","endLine":2,"endColumn":20},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-unused-vars","'Navigate' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["88"],"React Hook useEffect has missing dependencies: 'isAuthenticated' and 'navigate'. Either include them or remove the dependency array.",["89"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'apiEndPoints' is defined but never used.",{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},"Update the dependencies array to be: [navigate]",{"range":"94","text":"95"},"Update the dependencies array to be: [isAuthenticated, navigate]",{"range":"96","text":"97"},[366,368],"[navigate]",[335,337],"[isAuthenticated, navigate]"]